{"version":3,"sources":["localStorage.jsx","store.jsx","components/CreateTask.jsx","components/Tasks.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","tasks","serializedState","localStorage","getItem","JSON","parse","loadStorageTasks","taskEdit","createStore","state","action","type","concat","task","index","slice","splice","connect","dispatch","sendForm","edit","setEdit","onMobile","inputName","useRef","taskBefore","taskCreate","getDateTime","tempDate","Date","getFullYear","getMonth","getDate","useState","priority","date","setTask","sendEditTask","setSendEditTask","useEffect","window","innerWidth","showCreateTask","minDate","show","current","style","opacity","visibility","addEventListener","Fragment","onClick","e","className","ref","textTransform","onSubmit","preventDefault","focus","name","onChange","target","value","autoComplete","required","description","min","alignItems","remove","length","height","margin","marginBottom","map","i","wordBreak","marginRight","App","store","subscribe","initialSave","stringify","setItem","saveTaskToLocalStorage","getState","CreateTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf7ca6d3.chunk.js","sourcesContent":["  \nexport function loadStorageTasks (){\n\tconst serializedState = localStorage.getItem('tasks')\n\tif(serializedState === null){\n\t\treturn {tasks:[]};\n\t}else{\n\t\treturn JSON.parse(serializedState)\n\t}\n}\n\nexport const saveTaskToLocalStorage = (task)=>{\nconst initialSave = JSON.stringify(task)\nlocalStorage.setItem('tasks',initialSave)\n}\n\n","import { createStore } from \"redux\";\nimport { loadStorageTasks } from \"./localStorage\";\nconst initialState = {\n\ttasks: loadStorageTasks().tasks,\n\ttaskEdit: {},\n};\n\nconst reducerTask = (state = initialState, action) => {\n\tif (action.type === \"ADD_TASK\") {\n\t\treturn {\n\t\t\t...state,\n\t\t\ttasks: state.tasks.concat(action.task),\n\t\t};\n\t}\n\n\tif (action.type === \"EDIT_TASK\") {\n\t\tconst task = state.tasks;\n\t\ttask[action.index] = action.task;\n\n\t\treturn {\n\t\t\t...state,\n\t\t\ttasks: state.tasks.slice(),\n\t\t\ttaskEdit: {},\n\t\t};\n\t}\n\n\tif (action.type === \"SET_EDIT_TASK\") {\n\t\treturn {\n\t\t\t...state,\n\t\t\ttaskEdit: { task: action.task, index: action.index },\n\t\t};\n\t}\n\n\tif (action.type === \"DELETE_TASK\") {\n\t\tstate.tasks.splice(action.index, 1);\n\n\t\treturn {\n\t\t\t...state,\n\t\t\ttasks: state.tasks.slice(),\n\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default createStore(reducerTask);","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst CreateTasks = ({ sendForm, setEdit, edit, taskEdit }) => {\n  var onMobile = false;\n  const inputName = useRef(null);\n  const taskBefore = useRef(null);\n  const taskCreate = useRef(null);\n\n  const getDateTime = () => {\n    let tempDate = new Date();\n    let date =\n      tempDate.getFullYear() +\n      \"-\" +\n      (\"0\" + (tempDate.getMonth() + 1)).slice(-2) +\n      \"-\" +\n      (\"0\" + tempDate.getDate()).slice(-2);\n    const currDate = date;\n    return currDate;\n  };\n\n  const [task, setTask] = useState({ priority: \"Low\", date: getDateTime() });\n\n  const [sendEditTask, setSendEditTask] = useState(false);\n\n  useEffect(() => {\n    if (taskEdit.task) {\n      setTask(taskEdit.task);\n      setSendEditTask(true);\n      if (window.innerWidth <= 769) {\n        showCreateTask(true);\n      }\n    } else {\n      setSendEditTask(false);\n    }\n  }, [taskEdit]);\n\n  const [minDate] = useState(getDateTime());\n\n  const showCreateTask = (show) => {\n    if (show === true && taskBefore.current && taskCreate.current) {\n      taskBefore.current.style.opacity = \"1\";\n      taskBefore.current.style.visibility = \"visible\";\n      taskCreate.current.style.opacity = \"1\";\n      taskCreate.current.style.visibility = \"visible\";\n    }\n\n    if (show === false && taskBefore.current && taskCreate.current) {\n      taskBefore.current.style.opacity = \"0\";\n      taskBefore.current.style.visibility = \"hidden\";\n      taskCreate.current.style.opacity = \"0\";\n      taskCreate.current.style.visibility = \"hidden\";\n    }\n  };\n\n  const showMobile = (show) => {\n    if (show === true && taskCreate.current) {\n      taskCreate.current.style.opacity = \"1\";\n      taskCreate.current.style.visibility = \"visible\";\n    }\n  };\n\n  const handleForm = (e) => {\n    e.preventDefault();\n    if (window.innerWidth <= 769) {\n      showCreateTask(false);\n    }\n    if (sendEditTask) {\n      edit(task, taskEdit.index);\n    } else {\n      sendForm(task);\n    }\n    setSendEditTask(false);\n    setTask({ priority: \"Low\", date: getDateTime() });\n    inputName.current.focus();\n  };\n\n  window.addEventListener(\"resize\", () => {\n    if (window.innerWidth <= 769 && onMobile === true) {\n      onMobile = false;\n      showCreateTask(false);\n    }\n\n    if (window.innerWidth >= 769 && onMobile === false) {\n      onMobile = true;\n      showMobile(true);\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <i\n        onClick={(e) => {\n          showCreateTask(true);\n          setTask({ priority: \"Low\", date: getDateTime() });\n          setSendEditTask(false);\n        }}\n        className=\"fas fa-plus\"\n      ></i>\n\n      <div ref={taskBefore} className=\"task-before\"></div>\n\n      <div ref={taskCreate} className=\"task-create\">\n        <i\n          onClick={(e) => {\n            showCreateTask(false);\n            setSendEditTask(false);\n            setTask({ priority: \"Low\", date: getDateTime() });\n          }}\n          className=\"fas fa-times-circle\"\n        ></i>\n\n        <h2 style={{textTransform:'capitalize'}}>{sendEditTask === true ? \"Edit the task\" : \"Create the task\"}</h2>\n\n        <form onSubmit={handleForm}>\n          <div>\n            <label>Name of the Task</label>\n            <input\n              type=\"text\"\n              ref={inputName}\n              name=\"name\"\n              onChange={(e) => setTask({ ...task, name: e.target.value })}\n              value={task.name || \"\"}\n              autoComplete=\"off\"\n              required\n            />\n          </div>\n          <div>\n            <label>Description for the task</label>\n            <textarea\n              name=\"description\"\n              onChange={(e) =>\n                setTask({ ...task, description: e.target.value })\n              }\n              value={task.description || \"\"}\n              autoComplete=\"off\"\n              required\n            ></textarea>\n          </div>\n          <div>\n            <label>Time to finish the task</label>\n            <input\n              type=\"date\"\n              min={minDate}\n              value={task.date || \"\"}\n              name=\"date\"\n              onChange={(e) => setTask({ ...task, date: e.target.value })}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Priority for the task</label>\n            <select\n              name=\"priority\"\n              onChange={(e) => setTask({ ...task, priority: e.target.value })}\n              value={task.priority || \"\"}\n            >\n              <option value=\"Low\">Low</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"High\">High</option>\n            </select>\n          </div>\n\n          <div className=\"form-content\" style={{ alignItems: \"center\" }}>\n            <button type=\"submit\">\n              {sendEditTask === true ? \"Edit Task\" : \"Create Task\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  taskEdit: state.taskEdit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendForm(task) {\n    dispatch({\n      type: \"ADD_TASK\",\n      task,\n    });\n  },\n\n  edit(task, index) {\n    dispatch({\n      type: \"EDIT_TASK\",\n      task,\n      index,\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTasks);","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Tasks = ({ tasks, setEdit, remove }) => {\n\n  if (tasks.length === 0) {\n    return (\n      <div className=\"tasks\" style={{height:'100vh'}}>\n        <h1>Tasks List</h1>\n        <p style={{margin:'auto'}}>You have no task on the list! </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tasks\">\n      <h1 style={{ marginBottom: \"0\" }}>Tasks List</h1>\n\n      <div className=\"tasks-container\">\n        {tasks.map((task, i) => {\n          return (\n            <div className=\"task\" key={i}>\n              <div className=\"options\">\n                <i\n                  onClick={(e) => {\n                    setEdit(task, i);\n                  }}\n                  className=\"fas fa-edit\"\n                ></i>\n                <i\n                  onClick={(e) => {\n                    remove(i);\n                    setEdit(null);\n                  }}\n                  className=\"fas fa-trash\"\n                ></i>\n              </div>\n\n              <h3>{task.name}</h3>\n              <p style={{ wordBreak: \"break-word\" }}>{task.description}</p>\n              <div className=\"task-footer\">\n                <div>\n                  <i\n                    className=\"fas fa-exclamation-circle\"\n                    style={{ marginRight: \"5px\" }}\n                  ></i>\n                  <p>{task.priority}</p>\n                </div>\n                <div>\n                  <i\n                    className=\"fas fa-clock\"\n                    style={{ marginRight: \"5px\" }}\n                  ></i>{\" \"}\n                  <p>{task.date}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEdit(task, index) {\n    dispatch({\n      type: \"SET_EDIT_TASK\",\n      task,\n      index,\n    });\n  },\n\n  remove(index) {\n    dispatch({\n      type: \"DELETE_TASK\",\n      index,\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);","import React from 'react'\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport CreateTask from './components/CreateTask'\nimport Tasks from './components/Tasks'\nimport {saveTaskToLocalStorage} from './localStorage'\nconst App = () =>{\n\nstore.subscribe(() => {\n  saveTaskToLocalStorage({\n    tasks: store.getState().tasks\n  })\n})\n\n  return(\n  \t<Provider store={store}>\n    <div className=\"container\">\n    <CreateTask/>\n    <Tasks/>\n    </div>\n    </Provider>\n    )\n  \n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}